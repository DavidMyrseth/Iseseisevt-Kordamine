using System;

class Ulesanne1
{
    // Статический метод для решения задачи
    public static void Solve()
    {
        // Создаем двумерный массив, который будет заполнен случайными числами. Алгeнный массив
        int[,] arr2d = new int[4, 4];
        Random rnd = new Random(); // Создаем экземпляр генератора случайных чисел

        // Заполняем массив случайными числами
        for (int i = 0; i < arr2d.GetLength(0); i++) // Проходим по строкам массива
        {
            for (int j = 0; j < arr2d.GetLength(1); j++) // Проходим по столбцам массива
            {
                arr2d[i, j] = rnd.Next(1, 100); // Генерируем случайное число от 1 до 99 и заполняем массив
            }
        }

        Console.WriteLine("Algen array:"); // Выводим сообщение о начале вывода массива
        Print2DArray(arr2d); // Вызываем метод для вывода двумерного массива

        // Сортируем каждую строку: четные строки по возрастанию, нечетные - по убыванию. После сортировки
        for (int i = 0; i < arr2d.GetLength(0); i++) // Проходим по строкам массива
        {
            int[] row = new int[arr2d.GetLength(1)]; // Создаем одномерный массив для строки
            for (int j = 0; j < arr2d.GetLength(1); j++) // Проходим по столбцам для копирования строки
            {
                row[j] = arr2d[i, j]; // Копируем значения из двумерного массива в одномерный
            }

            if (i % 2 == 0) // Если индекс строки четный (0, 2, 4 и т.д.)
            {
                Array.Sort(row); // Сортируем строку по возрастанию
            }
            else // Если индекс строки нечетный (1, 3, 5 и т.д.)
            {
                Array.Sort(row); // Сначала сортируем по возрастанию
                Array.Reverse(row); // Затем разворачиваем строку для сортировки по убыванию
            }

            for (int j = 0; j < arr2d.GetLength(1); j++) // Проходим по столбцам
            {
                arr2d[i, j] = row[j]; // Возвращаем отсортированные значения обратно в двумерный массив
            }
        }

        Console.WriteLine("\nAfter sorting:"); // Сообщение о начале вывода отсортированного массива
        Print2DArray(arr2d); // Вызываем метод для вывода отсортированного двумерного массива
    }

    // Вспомогательный метод для вывода двумерного массива
    private static void Print2DArray(int[,] arr)
    {
        for (int i = 0; i < arr.GetLength(0); i++) // Проходим по строкам массива
        {
            for (int j = 0; j < arr.GetLength(1); j++) // Проходим по столбцам массива
            {
                Console.Write(arr[i, j] + "\t"); // Выводим элемент массива с табуляцией
            }
            Console.WriteLine(); // Переход на новую строку после вывода всех элементов текущей строки
        }
    }
}